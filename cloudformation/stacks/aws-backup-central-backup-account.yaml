AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template creates the regional KMS key used by AWS Backup, the AWS Backup Vault for the central backup account, and the IAM service role used by AWS Backup. 
  It should be deployed to a central AWS Backup vault account and region where you intend to store copies of your backup data.

Parameters:
  pBackupKeyAlias:
    Type: String
    Description: This is the name of the AWS Backup KMS key alias.
    Default: AWSBackupSolutionCentralKey
  pCentralBackupVaultName:
    Type: String
    Default: AWSBackupSolutionCentralVault
  pOrganizationId:
    Type: String
    Description: This is the AWS Organization ID value.

  # Parameters for tagging
  CommitId:
    Description: The commit id for the change
    Type: String
  BusinessUnit:
    Description: Business Unit Name
    Type: String
    MinLength: '1'
    MaxLength: '255'
    AllowedValues:
      - Marketing
      - Engineering
      - R&D
    ConstraintDescription: Must be a valid business unit
    Default:  Engineering
  CostCenter:
    Description: Cost Center for AWS Services
    Type: String
    MinLength: '1'
    MaxLength: '255'
    Default:  '00000'
  Environment:
    Description: Environment
    Type: String
    AllowedValues:
      - Development
      - QA
      - Production
    ConstraintDescription: Must be a valid environment.
    Default:  Development
  ApplicationOwner:
    Description: Email address of application owner
    Type: String
    Default:  selfserviceservicecatalog@example.com
  Application:
    Description: Application Name
    Type: String
    Default:  Example Application

Resources:
  rCentralAccountBackupKey:
    Type: AWS::KMS::Key
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F76
            reason: The principal is restricted by the condition statement
    Properties:
      Description: "Backup Key"
      EnableKeyRotation: True
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Sub ${pBackupKeyAlias}
        Statement:
          - Sid: "Enable IAM User Permissions"
            Effect: "Allow"
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
          - Sid: "Allow alias creation during setup"
            Effect: "Allow"
            Principal:
              AWS: "*"
            Action: "kms:CreateAlias"
            Resource: "*"
            Condition:
              StringEquals:
                "kms:CallerAccount": !Sub ${AWS::AccountId}
                "kms:ViaService": !Sub "cloudformation.${AWS::Region}.amazonaws.com"
          - Sid: Allow use of the key by authorized Backup vault account
            Effect: Allow
            Principal: "*"
            Action:
              - kms:DescribeKey
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey
              - kms:GenerateDataKeyWithoutPlaintext
            Resource: "*"
            Condition:
              ForAnyValue:StringLike:
                aws:PrincipalOrgPaths: !Sub "${pOrganizationId}/*"
          - Sid: "Allow attachment of persistent resources"
            Effect: Allow
            Principal: "*"
            Action:
              - kms:CreateGrant
              - kms:ListGrants
              - kms:RevokeGrant
            Resource: "*"
            Condition:
              Bool:
                kms:GrantIsForAWSResource: true
              ForAnyValue:StringLike:
                aws:PrincipalOrgPaths: !Sub "${pOrganizationId}/*"
      Tags:
        - Key: BusinessUnit
          Value: !Ref BusinessUnit
        - Key: CommitId
          Value: !Ref CommitId
        - Key: CostCenter
          Value: !Ref CostCenter
        - Key: ApplicationOwner
          Value: !Ref ApplicationOwner
        - Key: Application
          Value: !Ref Application
        - Key: Environment
          Value: !Ref Environment

  rCentralAccountBackupKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${pBackupKeyAlias}
      TargetKeyId: !Ref rCentralAccountBackupKey

  rCentralBackupVault:
    Type: AWS::Backup::BackupVault
    Properties:
      BackupVaultName: !Ref pCentralBackupVaultName
      EncryptionKeyArn: !GetAtt rCentralAccountBackupKey.Arn
      AccessPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: "Allow access to backup vault"
            Effect: Allow
            Action: backup:CopyIntoBackupVault
            Resource: !Sub arn:${AWS::Partition}:backup:${AWS::Region}:${AWS::AccountId}:backup-vault:*
            Principal: "*"
            Condition:
              StringEquals:
                aws:PrincipalOrgID: !Ref pOrganizationId

  AWSBackupSolutionCentralAccountRole:
    Type: "AWS::IAM::Role"
    Properties:
      Description: Allows AWS Backup to access AWS services
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - backup.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup
        - arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForRestores
      Tags:
        - Key: BusinessUnit
          Value: !Ref BusinessUnit
        - Key: CommitId
          Value: !Ref CommitId
        - Key: CostCenter
          Value: !Ref CostCenter
        - Key: ApplicationOwner
          Value: !Ref ApplicationOwner
        - Key: Application
          Value: !Ref Application
        - Key: Environment
          Value: !Ref Environment

Outputs:
  oCentralBackupVault:
    Value: !Ref rCentralBackupVault
    Export:
      Name: "aws-backup-central-backup-vault-name"

  CentralBackupVaultArn:
    Value: !GetAtt rCentralBackupVault.BackupVaultArn
    Export:
      Name: "aws-backup-central-backup-vault-arn"
