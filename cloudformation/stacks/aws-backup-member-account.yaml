AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template creates the regional KMS key used by AWS Backup and the AWS Backup Vault in each target account. It should be deployed to each AWS Region of a member account where you intend to store backup data/vault.
Parameters:
  CentralBackupVaultArn:
    Description: The ARN of a centralized AWS Backup Vault that will be the secondary store for all AWS Backups.  The defined organization backup policy plans will "copy_to" this vault.
    Type: String
  CentralAccountId:
    Description: The ARN of a centralized AWS Backup Vault that will be the secondary store for all AWS Backups.  The defined organization backup policy plans will "copy_to" this vault.
    Type: String
  pCrossAccountBackupRoleName:
    Type: String
    Description: This is the IAM role name for the cross-account backup role that carries out the backup activities.
    Default: AWSBackupSolutionRole
  pBackupKeyAlias:
    Type: String
    Description: This is the name of the AWS Backup KMS key alias.
    Default: AWSBackupSolutionKey
  pMemberBackupVaultName:
    Type: String
    Description: This is the name of the member account backup vaults.
    AllowedPattern: ^[a-zA-Z0-9\-\_\.]{1,50}$
    ConstraintDescription: Backup vault name is case sensitive. Must contain from 2 to 50 alphanumeric and '-_' characters.
    Default: AWSBackupSolutionVault

  # Parameters for tagging
  CommitId:
    Description: The commit id for the change
    Type: String
  BusinessUnit:
    Description: Business Unit Name
    Type: String
    MinLength: '1'
    MaxLength: '255'
    AllowedValues:
    - Marketing
    - Engineering
    - R&D
    ConstraintDescription: Must be a valid business unit
    Default: Engineering
  CostCenter:
    Description: Cost Center for AWS Services
    Type: String
    MinLength: '1'
    MaxLength: '255'
    Default: '00000'
  Environment:
    Description: Environment
    Type: String
    AllowedValues:
    - Development
    - QA
    - Production
    ConstraintDescription: Must be a valid environment.
    Default: Development
  ApplicationOwner:
    Description: Email address of application owner
    Type: String
    Default: selfserviceservicecatalog@example.com
  Application:
    Description: Application Name
    Type: String
    Default: Example Application

Resources:
  rMemberAccountBackupKey:
    Type: AWS::KMS::Key
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: F76
          reason: The principal is restricted by the condition statement
    Properties:
      Description: Symmetric AWS CMK for Member Account Backup Vault Encryption
      EnableKeyRotation: True
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Sub ${pBackupKeyAlias}
        Statement:
        - Sid: "Enable IAM User Permissions"
          Effect: "Allow"
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: "kms:*"
          Resource: "*"
        - Sid: Allow use of the key by authorized Backup principal
          Effect: "Allow"
          Principal:
            AWS:
            - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${pCrossAccountBackupRoleName}"
          Action:
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey
          - kms:GenerateDataKeyWithoutPlaintext
          Resource: "*"
          Condition:
            StringEquals:
              "kms:CallerAccount": !Sub ${AWS::AccountId}
              "kms:ViaService": !Sub "backup.${AWS::Region}.amazonaws.com"
        - Sid: Allow alias creation during setup
          Effect: "Allow"
          Principal:
            AWS: "*"
          Action: "kms:CreateAlias"
          Resource: "*"
          Condition:
            StringEquals:
              "kms:CallerAccount": !Sub ${AWS::AccountId}
              "kms:ViaService": !Sub "cloudformation.${AWS::Region}.amazonaws.com"
        - Sid: Allow use of the key
          Effect: "Allow"
          Principal:
            AWS:
            - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
            - !Sub "arn:${AWS::Partition}:iam::${CentralAccountId}:root"
          Action:
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey
          - kms:GenerateDataKeyWithoutPlaintext
          Resource: "*"
        - Sid: Allow attachment of persistent resources
          Effect: "Allow"
          Principal:
            AWS:
            - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
            - !Sub "arn:${AWS::Partition}:iam::${CentralAccountId}:root"
          Action:
          - kms:CreateGrant
          - kms:ListGrants
          - kms:RevokeGrant
          Resource: "*"
          Condition:
            Bool:
              "kms:GrantIsForAWSResource": "true"
      Tags:
      - Key: Application
        Value: !Ref Application
      - Key: CommitId
        Value: !Ref CommitId
      - Key: BusinessUnit
        Value: !Ref BusinessUnit
      - Key: CostCenter
        Value: !Ref CostCenter
      - Key: Environment
        Value: !Ref Environment
      - Key: ApplicationOwner
        Value: !Ref ApplicationOwner
  rMemberAccountBackupKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${pBackupKeyAlias}
      TargetKeyId: !Ref rMemberAccountBackupKey
  rMemberAccountBackupVault:
    Type: AWS::Backup::BackupVault
    Properties:
      BackupVaultName: !Ref pMemberBackupVaultName
      EncryptionKeyArn: !GetAtt rMemberAccountBackupKey.Arn
      AccessPolicy:
        Version: "2012-10-17"
        Statement:
        - Sid: "Allow access to backup vault for copy operations to centralized backup vault"
          Effect: Allow
          Action: backup:CopyIntoBackupVault
          Resource: !Ref CentralBackupVaultArn
          Principal: "*"

Outputs:
  oMemberAccountBackupVault:
    Value: !Ref rMemberAccountBackupVault
  oMemberAccountKMSKey:
    Value: !Ref rMemberAccountBackupKey
  oOrgAccountBackupRole:
    Value: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${pCrossAccountBackupRoleName}
